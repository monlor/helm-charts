{{- $namespace := include "helm.namespace" . -}}
{{- $appName := include "helm.name" . -}}
{{- $storageClass := include "helm.storageClass" . -}}
{{- if .Values.image -}}
apiVersion: apps/v1
kind: {{ .Values.resourceType | default "Deployment" }}
metadata:
  name: {{ $appName }}
  namespace: {{ $namespace }}
  labels: 
    image-updater.k8s.io/enabled: {{ .Values.kiu.enabled | quote }}
    {{- include "helm.labels" . | nindent 4 }}
  annotations:
    {{- include "helm.kiuAnnotations" . | nindent 4 }}
spec:
  {{- if ne .Values.resourceType "DaemonSet" }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  {{- if eq .Values.resourceType "StatefulSet" }}
  serviceName: {{ $appName }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  {{- if and .Values.strategy (ne .Values.resourceType "DaemonSet") }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  {{- if and .Values.strategy (eq .Values.resourceType "DaemonSet") }}
  updateStrategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels  }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      annotations:
      {{- include "helm.diunAnnotations" . | nindent 8 }}
      {{- include "helm.lpbAnnotations" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      shareProcessNamespace: {{ .Values.shareProcessNamespace | default "false" }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- end }}
      restartPolicy: {{ default "Always" .Values.restartPolicy }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
      - name: {{ .name }}
      {{- end }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}  
      initContainers: {{ toYaml .Values.initContainers | nindent 8 }}
      containers:
        - name: {{ $appName }}
          {{- if .Values.podSecurityContext }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          {{- end }}   
          image: {{ include "helm.image.url" . }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
          lifecycle: {{ toYaml .Values.lifecycle | nindent 12 }}
          command: {{ toYaml .Values.command | nindent 12 }}
          args: {{ toYaml .Values.args | nindent 12 }}
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.name   
            - name: KUBERNETES_NODE_NAME  
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KUBERNETES_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBERNETES_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          envFrom:
          {{- range .Values.config }}
          {{- if eq .attach "env" }}
          {{- if eq .type "Secret" }}
          - secretRef:
              name: {{ printf "%s-%s" $appName .name }}
              optional: {{ .optional | default "false" }}
          {{- else }}
          - configMapRef:
              name: {{ printf "%s-%s" $appName .name }}
              optional: {{ .optional | default "false" }}
          {{- end }}
          {{- end }}
          {{- end }}
          ports:
            {{- if .Values.port }}
            - name: server
              containerPort: {{ .Values.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.ports }}
            {{- toYaml .Values.ports | nindent 12 }}
          {{- end }}
          {{- if and .Values.health.enabled .Values.port }}
          {{- if .Values.health.liveness.enabled }}
          livenessProbe:
            {{- with .Values.health.liveness }}
            {{- if eq .mode "tcp" }}
            tcpSocket:
              port: {{ .port | default $.Values.port }}
            {{- else }}
            httpGet:
              path: {{ .path | default "/" }}
              port: {{ .port | default $.Values.port }}
            {{- end }}
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            successThreshold: {{ .successThreshold }}
            timeoutSeconds: {{ .timeoutSeconds }}
            {{- end }}
          {{- end }}
          {{- if .Values.health.readiness.enabled }}
          readinessProbe:
            {{- with .Values.health.readiness }}
            {{- if eq .mode "tcp" }}
            tcpSocket:
              port: {{ .port | default $.Values.port }}
            {{- else }}
            httpGet:
              path: {{ .path | default "/" }}
              port: {{ .port | default $.Values.port }}
            {{- end }}
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            successThreshold: {{ .successThreshold }}
            timeoutSeconds: {{ .timeoutSeconds }}
            {{- end }}
          {{- end }}
          {{- if .Values.health.startup.enabled }}
          startupProbe:
            {{- with .Values.health.startup }}
            {{- if eq .mode "tcp" }}
            tcpSocket:
              port: {{ .port | default $.Values.port }}
            {{- else }}
            httpGet:
              path: {{ .path | default "/" }}
              port: {{ .port | default $.Values.port }}
            {{- end }}
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            successThreshold: {{ .successThreshold }}
            timeoutSeconds: {{ .timeoutSeconds }}
            {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}  
          volumeMounts: 
            {{- range .Values.volumeMounts }}
            - name: {{ printf "%s-%s" $appName .name }}
              mountPath: {{ .mountPath }}
              {{- if .mountPropagation }}
              mountPropagation: {{ .mountPropagation }}
              {{- end }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              readOnly: {{ default false .readOnly }}
            {{- end }}
            {{- range .Values.volumes }}
            - name: {{ printf "%s-%s" $appName .name }}
              mountPath: {{ .mountPath }}
              {{- if .mountPropagation }}
              mountPropagation: {{ .mountPropagation }}
              {{- end }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              readOnly: {{ default false .readOnly }}
            {{- end }}
            {{- range .Values.config }}
            {{- if eq .attach "file" }}
            {{/* 如果configMap长度大于1，则映射所有key到目标目录，如果等于1，则仅映射单文件 */}}
            {{- $dataLength := len .data }}
            {{- if gt $dataLength 1 }}
            - name: {{ printf "%s-%s" $appName .name }}
              mountPath: {{ .mountPath }}
            {{- else }}
            {{- $data := index .data 0 }}
            - name: {{ printf "%s-%s" $appName .name }}
              mountPath: {{ printf "%s/%s" .mountPath $data.key }}
              subPath: {{ $data.key }}
              readOnly: true
            {{- end }}
            {{- end }}
            {{- end }}
          {{- if .Values.sidecars }}
          {{ toYaml .Values.sidecars | nindent 8 }}
          {{- end }}
      volumes: 
        {{- range .Values.volumes }}
        - name: {{ printf "%s-%s" $appName .name }}
          {{- if .secret }}
          secret: {{ .secret | toYaml | nindent 12 }}
          {{- end }}
          {{- if .configMap }}
          configMap: {{ .configMap | toYaml | nindent 12 }}
          {{- end -}}
          {{- if .persistentVolume }}
          persistentVolumeClaim: 
            {{- if .persistentVolume.create }}
            claimName: {{ printf "%s-%s" $appName .name }}
            {{- else }}
            claimName: {{ .name }}
            {{- end }}
          {{- end -}}
          {{- if .hostPath }}
          hostPath: {{ toYaml .hostPath | nindent 12 }}
          {{- end }}
          {{- if not (eq .emptyDir nil) }}
          emptyDir: {{ toYaml .emptyDir | nindent 12 }}
          {{- end }}
        {{- end -}}
        {{- range .Values.config }}
        {{- if eq .attach "file" }}
        - name: {{ printf "%s-%s" $appName .name }}
          {{- if eq .type "Secret" }}
          secret:
            secretName: {{ printf "%s-%s" $appName .name }}
          {{- else }}
          configMap:
            name: {{ printf "%s-%s" $appName .name }}
          {{- end }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if and (eq .Values.resourceType "StatefulSet") .Values.volumes }}
  volumeClaimTemplates:
    {{- range .Values.volumes }}
    {{- if .persistentVolume }}
    - metadata:
        name: {{ .name }}
        {{- if .persistentVolume.retain }}
        annotations:
          "helm.sh/resource-policy": keep
        {{- end }}
      spec:
        accessModes:
          - {{ .persistentVolume.accessModes }}
        {{- if $storageClass }}
        storageClassName: {{ $storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .persistentVolume.storageSize }}
    {{- end }}
    {{- end }}
  {{- end }}
{{- end -}}